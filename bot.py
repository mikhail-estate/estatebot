import logging
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    filters,
    ContextTypes,
    ConversationHandler
)

# –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –≠—Ç–∞–ø—ã
NAME, AREA, GOAL, MORTGAGE, PHONE = range(5)

# –¢–≤–æ–π Telegram chat_id
ADMIN_CHAT_ID = 992184941

# –°—Ç–∞—Ä—Ç
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text("üëã –ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –ø–æ–ª—É—á–∏—Ç—å —á–µ–∫-–ª–∏—Å—Ç –ø–æ –ø—Ä–∏—ë–º–∫–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã.\n\n–ö–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç?")
    return NAME

# –ò–º—è
async def get_name(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["name"] = update.message.text
    await update.message.reply_text("üó∫Ô∏è –í –∫–∞–∫–æ–º —Ä–∞–π–æ–Ω–µ –∏–ª–∏ –ñ–ö —Ç—ã –ø–æ–∫—É–ø–∞–µ—à—å –∫–≤–∞—Ä—Ç–∏—Ä—É?")
    return AREA

# –†–∞–π–æ–Ω
async def get_area(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["area"] = update.message.text
    await update.message.reply_text("üè† –ü–æ–∫—É–ø–∞–µ—à—å –¥–ª—è —Å–µ–±—è –∏–ª–∏ –ø–æ–¥ –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–∏?")
    return GOAL

# –¶–µ–ª—å
async def get_goal(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["goal"] = update.message.text
    await update.message.reply_text("üí∏ –ï—Å—Ç—å –ª–∏ –∏–ø–æ—Ç–µ–∫–∞?")
    return MORTGAGE

# –ò–ø–æ—Ç–µ–∫–∞
async def get_mortgage(update: Update, context: ContextTypes.DEFAULT_TYPE):
    context.user_data["mortgage"] = update.message.text
    phone_btn = KeyboardButton("üìû –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä", request_contact=True)
    markup = ReplyKeyboardMarkup([[phone_btn]], resize_keyboard=True, one_time_keyboard=True)
    await update.message.reply_text(
        "üì≤ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É ¬´–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä¬ª, —á—Ç–æ–±—ã –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞.\n\n‚úçÔ∏è –í–≤–æ–¥ –≤—Ä—É—á–Ω—É—é –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è.",
        reply_markup=markup
    )
    return PHONE

# –¢–µ–ª–µ—Ñ–æ–Ω + –æ—Ç–ø—Ä–∞–≤–∫–∞ PDF + –æ—Ç–ø—Ä–∞–≤–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
async def get_phone(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.contact:
        phone = update.message.contact.phone_number
        context.user_data["phone"] = phone

        # –û—Ç–ø—Ä–∞–≤–∫–∞ PDF –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await update.message.reply_text("‚úÖ –°–ø–∞—Å–∏–±–æ! –í–æ—Ç —Ç–≤–æ–π —á–µ–∫-–ª–∏—Å—Ç –ø–æ –ø—Ä–∏—ë–º–∫–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã.")
        try:
            with open("checklist.pdf", "rb") as pdf_file:
                await update.message.reply_document(document=pdf_file)
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ PDF: {e}")
            await update.message.reply_text(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª. –û—à–∏–±–∫–∞: {e}")

        # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–±–µ –∞–Ω–∫–µ—Ç—ã
        message = (
            "üì© *–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞:*\n"
            f"üë§ –ò–º—è: {context.user_data['name']}\n"
            f"üìç –†–∞–π–æ–Ω/–ñ–ö: {context.user_data['area']}\n"
            f"üéØ –¶–µ–ª—å: {context.user_data['goal']}\n"
            f"üí∞ –ò–ø–æ—Ç–µ–∫–∞: {context.user_data['mortgage']}\n"
            f"üìû –¢–µ–ª–µ—Ñ–æ–Ω: {context.user_data['phone']}"
        )
        await context.bot.send_message(chat_id=ADMIN_CHAT_ID, text=message, parse_mode="Markdown")

        return ConversationHandler.END
    else:
        # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –æ—Ç–ø—Ä–∞–≤–∏–ª –∫–æ–Ω—Ç–∞–∫—Ç, –∞ –≤–≤—ë–ª –≤—Ä—É—á–Ω—É—é
        await update.message.reply_text("‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –≤–≤–æ–¥–∏ –Ω–æ–º–µ—Ä –≤—Ä—É—á–Ω—É—é. –ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É ¬´–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä¬ª.")
        phone_btn = KeyboardButton("üìû –û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä", request_contact=True)
        markup = ReplyKeyboardMarkup([[phone_btn]], resize_keyboard=True, one_time_keyboard=True)
        await update.message.reply_text(
            "üì≤ –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É ¬´–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä¬ª, —á—Ç–æ–±—ã –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω–∞.\n\n‚úçÔ∏è –í–≤–æ–¥ –≤—Ä—É—á–Ω—É—é –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è.",
            reply_markup=markup
        )
        return PHONE

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    app = ApplicationBuilder().token("7318408114:AAFz7ZrQN6GuT0WJcCMplTvqVL2PLISTrn8").build()

    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_name)],
            AREA: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_area)],
            GOAL: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_goal)],
            MORTGAGE: [MessageHandler(filters.TEXT & ~filters.COMMAND, get_mortgage)],
            PHONE: [
                MessageHandler(filters.CONTACT, get_phone),
                MessageHandler(filters.TEXT & ~filters.COMMAND, get_phone)
            ],
        },
        fallbacks=[],
    )

    app.add_handler(conv_handler)
    app.run_polling()

if __name__ == "__main__":
    main()
